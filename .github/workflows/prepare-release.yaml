name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      semverType:
        description: 'Which type of semver to release'
        required: true
        type: choice
        options:
          - 'prerelease'
          - 'patch'
          - 'minor'
          - 'major'

jobs:
  # Prepare all the packages for update
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating/updating branches and PRs
      pull-requests: write # Needed for creating PRs
      id-token: write # Keep your existing permissions

    # Make sure we only perform prerelease on next branch and prod on main branch
    if: (github.ref == 'refs/heads/main' && github.event.inputs.semverType != 'prerelease') || (github.ref == 'refs/heads/next' && github.event.inputs.semverType == 'prerelease')

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Using GITHUB_TOKEN makes actions run as github-actions bot

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: NPM Install
        run: npm install

      # Patch please-release with our own version of the prerelease strategy which always just increments the prerelease version
      - name: Patch release-please prerelease versioning strategy
        run: npx patch-package --patch-dir release

      # Run please-release so that it generates a PR which bumps the versions and updates the changelogs
      # The PR can then be reviewed and merged, once merged run the publish action to actually publish the release and npm packages
      - name: Release Please
        run: |
          CONFIG_FILE=release/release-please-config.${{ github.event.inputs.semverType }}.json
          MANIFEST_FILE=release/release-please-manifest.${{ github.event.inputs.semverType == 'prerelease' && 'prerelease' || 'prod' }}.json
          node_modules/.bin/release-please release-pr --config-file=${CONFIG_FILE} --manifest-file=${MANIFEST_FILE} --repo-url=${{ github.repository }} --target-branch=${{ github.ref_name}} --token=${{ secrets.GITHUB_TOKEN }}

      # Add the workflow triggering user as a reviewer
      - name: Find and update PR with reviewer
        run: |
          # Find the PR number
          PR_TITLE_PREFIX="chore: ${{ github.event.inputs.semverType }} release prepared"
          echo "Looking for PR with title starting with: $PR_TITLE_PREFIX"
          PR_NUMBER=$(gh pr list --state open --author app/github-actions --json number,title --jq '.[] | select(.title | startswith("'"$PR_TITLE_PREFIX"'")) | .number')

          if [ -z "$PR_NUMBER" ]; then
            echo "No matching PR found"
            exit 0
          fi

          echo "Found PR #$PR_NUMBER"

          # Add workflow trigger user as reviewer
          echo "Adding ${{ github.triggering_actor }} as reviewer"
          gh pr edit $PR_NUMBER --add-reviewer ${{ github.triggering_actor }}

          echo "Reviewer added successfully"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
